import java.nio.file.Files
import org.apache.commons.io.FileUtils

buildscript {
	ext.kotlin_version = '1.5.31'
	ext.jnaVersion = '5.9.0'
	ext.gdxVersion = '1.10.0'
	ext.visuiVersion = "1.5.0"

	repositories {
		mavenCentral()
		gradlePluginPortal()
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.0'
		classpath "commons-io:commons-io:2.11.0"
	}
}

apply plugin: "idea"
apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "application"
apply plugin: "com.github.johnrengelman.shadow"

group "rat.poison"
version "1.8"

mainClassName = "rat.poison.RatPoison"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
	maven { url 'https://jitpack.io' }
	gradlePluginPortal()
}

dependencies {
	implementation group: "org.jire.arrowhead", name: "arrowhead", version: "1.3.3"

	implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	implementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
	implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
	implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
	implementation group: 'net.java.dev.jna', name: 'jna', version: jnaVersion
	implementation group: 'net.java.dev.jna', name: 'jna-platform', version: jnaVersion
	implementation "com.kotcrab.vis:vis-ui:$visuiVersion"
	implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
	implementation group: 'org.jetbrains.kotlin', name: 'kotlin-script-runtime', version: kotlin_version
	implementation group: 'org.jetbrains.kotlin', name: 'kotlin-script-util', version: kotlin_version
	implementation group: 'org.jetbrains.kotlin', name: 'kotlin-compiler-embeddable', version: kotlin_version

	implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
	implementation 'com.github.ata4:ioutils:b1f26588b5'
	implementation 'com.github.ata4:bspsrc:v1.3.24'

	implementation group: 'it.unimi.dsi', name: 'fastutil', version: '8.4.4'

	implementation group: 'net.openhft', name: 'chronicle-core', version: '2.21.92'
	implementation "io.ktor:ktor-client-websockets:1.5.4"
	implementation "io.ktor:ktor-client-okhttp:1.5.4"
	implementation 'com.google.code.gson:gson:2.8.8'
	implementation "org.slf4j:slf4j-nop:1.7.31"
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
	}
}

shadowJar {
	archiveBaseName.set('RatPoison')
	archiveClassifier.set(null)
}

task RatPoison {
	doLast {
		def name = "RatPoison $version"

		def dir = file("build/$name/")
		if (dir.exists()) {
			dir.deleteDir()
		}
		dir.mkdirs()

		def jarName = "${name}.jar"
		//noinspection GroovyAssignabilityCheck
		def jar = file(new File(dir, jarName))
		def allJar = file("build/libs/RatPoison-${version}.jar")
		Files.copy(allJar.toPath(), jar.toPath())

		//noinspection GroovyAssignabilityCheck
		def bat = file(new File(dir, "Start ${name}.bat"))
		Files.write(bat.toPath(), """@echo off
		set path="%JAVA_HOME%";%path%
		cd /d "%~dp0"
		title $name
		java -Xmx512m -Xms32m -XX:+UseSerialGC -jar "$jarName" 
		pause""".getBytes())

		def dirSettings = file(new File(dir, "settings"))
		def settings = file("settings")
		dirSettings.mkdirs()
		FileUtils.copyDirectory(settings, dirSettings)

		def dirSkin = file(new File(dir, "skin"))
		dirSkin.mkdirs()
		def skins = file("skin")
		FileUtils.copyDirectory(skins, dirSkin)
	}
}

RatPoison.dependsOn shadowJar
RatPoison.mustRunAfter shadowJar

sourceSets {
	main.java.srcDirs += 'src/main/java'
	main.java.srcDirs += 'src/main/kotlin'
	main.java.srcDirs += 'settings'
}

compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
		freeCompilerArgs = ["-Xinline-classes"]
	}
}